
*******************************************************************************
For the next major version, rethink the way file handles are
implemented:

Currently file handles and filename information are stored in the same
structure.  Hard links throw a wrench into this mechanism.

How about separate structures for directory and handle information?
This would be more like unix.  

What is the directory information used for anyway?  For mapping
filenames to file handles.  Would it be reasonable to make this
separate?  Pros/cons?  The current scheme is simple (without hard links).

Important needs:
mapping of file handle to a pathname.
A file handle with multiple links may have multiple pathnames. How do
we manage this?  At first it might seem that the name of the
"first" link could just be used.  However, if that file is deleted,
then subsequence operations will fail.  A possible workaround is to
keep a list of known pathnames and if a filename is unlinked from a
directory, update the list.  That's as good as any other methods being
used.  

*******************************************************************************
misc:
- sparse file support
- execute permissions issue (spr37568)

*******************************************************************************
--- older stuff ----

nsm: How long do we try sending state-change notifications?
nsm: How long do we try notify sending callbacks?
nlm: How long do we try sending NLM_GRANTED messages? Forever?

